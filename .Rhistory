problem1('gaga', dnorm, c(-5, 5), 100, TRUE)
problem1('gaga', dnorm, c(-5, 5), 100, TRUE)
problem1('gaga', dnorm, c(-5, 5), 100, TRUE)
problem1('gaga', dnorm, c(-5, 5), 100, TRUE)
problem1('gaga', dnorm, c(-5, 5), 100, TRUE)
?seq
problem1('gaga', dnorm, c(-5, 5), 100, TRUE)
years
year
str(medals)
attach(medals)
Year
str(medals)
letters[1]
str(medals)
rep(1, length(medals))
length(medals)
size(medals)
dim(medals)
str(medals)
tapply(medals$NOC, medals$Medal, sum)
tapply(rep(1, dim(medals)[1]), medals$Medal, sum)
tapply(rep(1, dim(medals)[1] - 3), medals$Medal, sum)
tapply(rep(1, dim(medals)[1]), medals$NOC, sum)
medals[medal = GOLD]
medals[medal == 'GOLD']
medals[medals$medal == 'GOLD']
medals[medals$medal == 'Gold']
medals[medals$Medal == 'Gold']
str(medals)
medal
Medal
medals$Medal
medals[medals$Medal == 'Gold']
medals[medals$Medal == "Gold"]
class(medals)
medals[1]
medals[year > 2006]
medals[medals$Year > 2006]
str(medals)
medals[medals$Medal == "Gold", ]
dim(medals[medals$Medal == "Gold", ])
dim(medals[medals$Medal == "Bronze", ])
dim(medals[medals$Medal == "Silver", ])
getNames(tapply(rep(1, dim(bronzes)[1]), bronzes$NOC, sum))
names(tapply(rep(1, dim(bronzes)[1]), bronzes$NOC, sum))
class(names(tapply(rep(1, dim(bronzes)[1]), bronzes$NOC, sum)))
names(tapply(rep(1, dim(bronzes)[1]), bronzes$NOC, sum))[2]
values(tapply(rep(1, dim(bronzes)[1]), bronzes$NOC, sum))
as.matrix(gstats)
as.matrix(gstats)[1, ]
data.frams(NOC = names(gstats), Gold = as.matrix(gstats))
data.frame(NOC = names(gstats), Gold = as.matrix(gstats))
as.matrix(gstats)[, 1]
names(gstats) = NULL
gstats
dimnames(gstats)
names(gstats)
class(dimnames(gstats))
gstats
bstats
sstats
medals
length(names(gstats))
length(gstats)
require(my1rpack)
require('my1rpack')
?problem1
quit()
n
problem2
quit()
n
